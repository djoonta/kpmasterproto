syntax = "proto3";
package kpmasterproto;

import "installment/installment.proto";
import "occupation/occupation.proto";
import "encumbrance/encumbrance.proto";
import "bank/bank.proto";
import "verification_status_reject/verification_status_reject.proto";


option go_package = "github.com/djoonta/kpmasterproto";

service OccupationService {
  rpc FindID(OccupationFindIDRequest) returns (OccupationFindIDResponse) {}
  rpc FindAll(OccupationFindAllRequest) returns (OccupationFindAllResponse) {}
  rpc Create(OccupationCreateRequest) returns (OccupationCreateResponse) {}
  rpc Delete(OccupationDeleteRequest) returns (OccupationDeleteResponse) {}
  rpc Update(OccupationUpdateRequest) returns (OccupationUpdateResponse) {}
}

service InstallmentService {
  rpc FindAll(InstallmentFindAllRequest) returns (InstallmentFindAllResponse) {}
  rpc FindID(InstallmentFindIDRequest) returns (InstallmentFindIDResponse) {}
  rpc Create(InstallmentCreateRequest) returns (InstallmentCreateResponse) {}
  rpc Delete(InstallmentDeleteRequest) returns (InstallmentDeleteResponse) {}
  rpc Update(InstallmentUpdateRequest) returns (InstallmentUpdateResponse) {}
 
}

service EncumbranceService {
  rpc FindAll(EncumbranceFindAllRequest) returns (EncumbranceFindAllResponse) {}
  rpc FindID(EncumbranceFindIDRequest) returns (EncumbranceFindIDResponse) {}
  rpc Create(EncumbranceCreateRequest) returns (EncumbranceCreateResponse) {}
  rpc Delete(EncumbranceDeleteRequest) returns (EncumbranceDeleteResponse) {}
  rpc Update(EncumbranceUpdateRequest) returns (EncumbranceUpdateResponse) {}
 
}

service BankService {
  rpc FindAll(BankFindAllRequest) returns (BankFindAllResponse) {}
  rpc FindID(BankFindIDRequest) returns (BankFindIDResponse) {}
  rpc Create(BankCreateRequest) returns (BankCreateResponse) {}
  rpc Delete(BankDeleteRequest) returns (BankDeleteResponse) {}
  rpc Update(BankUpdateRequest) returns (BankUpdateResponse) {} 
}

service VerificationStatusRejectService {
  rpc FindAll(VerificationStatusRejectFindAllRequest) returns (VerificationStatusRejectFindAllResponse) {}
  rpc FindID(VerificationStatusRejectFindIDRequest) returns (VerificationStatusRejectFindIDResponse) {}
  rpc Create(VerificationStatusRejectCreateRequest) returns (VerificationStatusRejectCreateResponse) {}
  rpc Delete(VerificationStatusRejectDeleteRequest) returns (VerificationStatusRejectDeleteResponse) {}
  rpc Update(VerificationStatusRejectUpdateRequest) returns (VerificationStatusRejectUpdateResponse) {} 
}
